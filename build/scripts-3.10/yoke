#!/usr/bin/python
import yoke
import argparse
import sys
import errno

sys.tracebacklimit = 3

parser = argparse.ArgumentParser()
parser.add_argument('--name', type=str, default='Yoke', help='virtual device name')
parser.add_argument('--id', type=int, default=1, help='virtual device id (an integer larger than 0 in case there are multiple virtual devices)')
parser.add_argument('--iface', type=str, default='auto', help='IP of network interface (card) to listen on')
parser.add_argument('--port', type=int, default=0, help='port to listen on')
parser.add_argument('--buffer', type=int, default=64, help='socket buffer length, in bytes (larger buffers add more lag, but allow for more complex gamepads)')
args = parser.parse_args()

service = None

try:
    service = yoke.Service(args.name, args.id, args.iface, args.port, args.buffer)
    service.run()
except KeyboardInterrupt:
    pass
except OSError as err:
    if err.errno == errno.EADDRINUSE:
        print('UDP port already in use.')
        print('Hint: you can run yoke again with no arguments to try a random port,')
        print('or select a port with option --port')
except yoke.service.TCPPortError:
    print()
    print('TCP port already in use.')
    print('Please wait for a few seconds before retrying')
    print('or select a different port with option --port')
    pass
except yoke.service.DeviceNameTakenError as err:
    print()
    print('Device name "{}" already taken. Set another name with --name NAME'.format(err.args[0]))
except yoke.service.UInputDisabledError as err:
    print()
    print("Failed to initialize device via uinput.")
    print("Hint: try loading kernel driver with `sudo modprobe uinput`.")
    print("Hint: make sure you've run `yoke-enable-uinput` to configure permissions.")
    print()
    print("More info: {}".format(err.args))
except yoke.service.MalformedMessageError as err:
    print()
    print("Received a status report of the wrong length.")
    print("Received {} bytes, expected {}".format(err.args[0], err.args[1]))
    print()
    print("This can be a temporary error due to connection problems,")
    print("or a defect from the joypad on the webserver.")
finally:
    print()
    print("Shutting downâ€¦")
    if service is not None:
        service.close()
